<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>H.265 on KAY SINGH</title><link>https://singhkays.github.io/tags/h.265/</link><description>Recent content in H.265 on KAY SINGH</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2017–2020, Kay Singh; all rights reserved.</copyright><lastBuildDate>Thu, 26 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://singhkays.github.io/tags/h.265/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 3: Building a scalable 'shot-based' serverless AV1 video encoder in Azure</title><link>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-3/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-3/</guid><description>This is a 3-part blog covering how to build a scalable shot-based serverless video encoder in Azure. In Part 1, I explain what AV1 is and where we are in the video encoding space. In part 2, we create a logic app to upload and index the video. In part 3, we&amp;rsquo;ll need to split the video into its scenes and encode individual scenes. For reference, here are the links to all the parts:</description></item><item><title>Part 2: Building a scalable 'shot-based' serverless AV1 video encoder in Azure</title><link>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-2/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-2/</guid><description>This is a 3-part blog covering how to build a scalable shot-based serverless video encoder in Azure. In Part 1, I explain what AV1 is and where we are in the video encoding space. In part 2, we create a logic app to upload and index the video. In part 3, we&amp;rsquo;ll need to split the video into its scenes and encode individual scenes. For reference, here are the links to all the parts:</description></item><item><title>Part 1: Building a scalable 'shot-based' serverless AV1 video encoder in Azure</title><link>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-1/</link><pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate><guid>https://singhkays.github.io/blog/azure-serverless-distributed-video-encoder-av1-part-1/</guid><description>This is a 3-part blog covering how to build a scalable shot-based serverless video encoder in Azure. In Part 1, I explain what AV1 is and where we are in the video encoding space. In part 2, we create a logic app to upload and index the video. In part 3, we&amp;rsquo;ll need to split the video into its scenes and encode individual scenes. For reference, here are the links to all the parts:</description></item><item><title>Testing x265 encoder scaling on a 128 core Azure VM for 4K HDR</title><link>https://singhkays.github.io/blog/x265-128-core-scaling-4k-hevc-hdr-azure-vm/</link><pubDate>Sun, 19 Aug 2018 13:52:28 -0700</pubDate><guid>https://singhkays.github.io/blog/x265-128-core-scaling-4k-hevc-hdr-azure-vm/</guid><description>Video encoding has always been a fairly compute intensive task. With every new generation of video encoders, more computational power has been required to achieve the compression benefits. HEVC/H.265 is the latest state of the art video compression standard with x265 being the most popular open-source encoder used for encoding into the HEVC/H.265 format. In comparison to AVC/H.264 (the previous state of the art encoding format), HEVC offers about double the data compression ratio at the same level of video quality, or substantially improved video quality at the same bit rate.</description></item></channel></rss>